// 【问题描述】

// Tiger 最近被公司升任为营业部经理，他上任后接受公司交给的第一项任务便是统计并分析公司成立以来的营业情况。

// Tiger 拿出了公司的账本，账本上记录了公司成立以来每天的营业额。分析营业情况是一项相当复杂的工作。由于节假日，大减价或者是其他情况的时候，营业额会出现一定的波动，当然一定的波动是能够接受的，但是在某些时候营业额突变得很高或是很低，这就证明公司此时的经营状况出现了问题。经济管理学上定义了一种最小波动值来衡量这种情况：当最小波动值越大时，就说明营业情况越不稳定。

// 而分析整个公司的从成立到现在营业情况是否稳定，只需要把每一天的最小波动值加起来就可以了。你的任务就是编写一个程序帮助 Tiger 来计算这一个值。

// 我们定义，一天的最小波动值 = min{∣该天以前某一天的营业额−该天营业额∣}。

// 特别地，第一天的最小波动值为第一天的营业额。


// 【输入形式】

// 第一行为正整数 n（n≤32767） ，表示该公司从成立一直到现在的天数，接下来的 n 行每行有一个整数 a 
// i
//  （∣a 
// i
//  ∣≤10 
// 6
//  ) ，表示第 i 天公司的营业额，可能存在负数。

// 【输出形式】

// 输出一个正整数，即每一天最小波动值的和，保证结果小于 2 
// 31
//  。

// 【样例输入】

// 6

// 5

// 1

// 2

// 5

// 4

// 6


// 【样例输出】

// 12

#include <iostream>

using namespace std;

int main() {
    int n;
    cin >> n;
    int arr[32767];
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    long long total = arr[0];
    for (int i = 1; i < n; i++) {
        int min_diff = abs(arr[i] - arr[0]);
        for (int j = 1; j < i; j++) {
            int diff = abs(arr[i] - arr[j]);
            if (diff < min_diff) {
                min_diff = diff;
            }
        }
        total += min_diff;
    }
    cout << total << endl;
    return 0;
}